{
  "info": {
    "name": "Test Scenarios: Account Management API - Level 1",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Scenario 1: Update and fetch account balance",
      "item": [
        {
          "name": "1.1. Add initial amount to account 1.",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Transaction-Id",
                "value": "7943f961-a733-43cf-ba3d-905a5856f6da",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"account_id\": \"a40bcc03-6f39-418c-ad0b-97e14f522ec1\",\n\t\"amount\" : 7\n}"
            },
            "url": {
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "amount"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('', () => {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "1.2. Return current account balance of account 1.",
          "request": {
            "method": "GET",
            "url": {
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "balance",
                "a40bcc03-6f39-418c-ad0b-97e14f522ec1"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('', () => {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.balance).to.eql(7);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "1.3. Return current account balance of account 1 again.",
          "request": {
            "method": "GET",
            "url": {
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "balance",
                "a40bcc03-6f39-418c-ad0b-97e14f522ec1"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('', () => {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.balance).to.eql(7);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "1.4. Add more amount to account 1.",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              },
              {
                "key": "Transaction-Id",
                "value": "3bc387f1-f46e-45b1-9ab7-4f6840181f19",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"account_id\": \"a40bcc03-6f39-418c-ad0b-97e14f522ec1\",\n\t\"amount\" : 13\n}"
            },
            "url": {
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "amount"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('', () => {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "1.5. Return updated balance of account 1.",
          "request": {
            "method": "GET",
            "url": {
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "balance",
                "a40bcc03-6f39-418c-ad0b-97e14f522ec1"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('', () => {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.balance).to.eql(20);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "1.6. Deduct some amount from account 1.",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              },
              {
                "key": "Transaction-Id",
                "value": "1f80bf52-5f0b-41d7-95f9-6e61a1734298",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"account_id\": \"a40bcc03-6f39-418c-ad0b-97e14f522ec1\",\n\t\"amount\" : -10\n}"
            },
            "url": {
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "amount"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('', () => {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "1.7. Return deducted balance of account 1.",
          "request": {
            "method": "GET",
            "url": {
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "balance",
                "a40bcc03-6f39-418c-ad0b-97e14f522ec1"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('', () => {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.balance).to.eql(10);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Scenario 2: Rejecting invalid requests.",
      "description": "This test suite ensures graceful handling of malformed requests.",
      "item": [
        {
          "name": "2.1 Method Not Allowed when wrong HTTP method.",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              },
              {
                "key": "Transaction-Id",
                "type": "text",
                "value": "417a48dd-b73e-45fc-9ee0-c5d97c46748f"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"account_id\": \"a40bcc03-6f39-418c-ad0b-97e14f522ec1\",\n\t\"amount\" : 10\n}"
            },
            "url": {
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "amount"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('', () => {",
                  "    pm.response.to.have.status(405);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "2.2. Unsupported Media Type when wrong content type.",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/xml"
              },
              {
                "key": "Transaction-Id",
                "value": "59b2917e-6407-40eb-8fbf-287435fcd6f8",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"account_id\": \"a40bcc03-6f39-418c-ad0b-97e14f522ec1\",\n\t\"amount\" : 13\n}"
            },
            "url": {
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "amount"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('', () => {",
                  "    pm.response.to.have.status(415);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "2.3. Bad Request when no account_id.",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              },
              {
                "key": "Transaction-Id",
                "value": "6eadf15c-fc8a-4584-b708-31a56df13563",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"amount\" : 13\n}"
            },
            "url": {
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "amount"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('', () => {",
                  "    pm.response.to.have.status(400);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "2.4. Bad Request when no amount.",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              },
              {
                "key": "Transaction-Id",
                "value": "6eadf15c-fc8a-4584-b708-31a56df13563",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"account_id\": \"a40bcc03-6f39-418c-ad0b-97e14f522ec1\"\n}"
            },
            "url": {
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "amount"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('', () => {",
                  "    pm.response.to.have.status(400);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "2.5. Bad Request when wrong amount type.",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              },
              {
                "key": "Transaction-Id",
                "value": "da0b5092-8f41-4774-87be-16cc3a778549",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"account_id\": \"a40bcc03-6f39-418c-ad0b-97e14f522ec1\",\n\t\"amount\" : \"dafadf\"\n}"
            },
            "url": {
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "amount"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('', () => {",
                  "    pm.response.to.have.status(400);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "2.6. Bad Request when wrong account_id.",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              },
              {
                "key": "Transaction-Id",
                "value": "da439f4b-c969-4445-b296-1dd4cc93477e",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"account_id\": 5,\n\t\"amount\" : 10\n}"
            },
            "url": {
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "amount"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('', () => {",
                  "    pm.response.to.have.status(400);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "2.7. Not Found when no request account found.",
          "request": {
            "method": "GET",
            "url": {
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "balance",
                "4a53a8f5-036c-4851-a86a-401abd01e1a7"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('', () => {",
                  "    pm.response.to.have.status(404);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    }
  ],
  "variable": [
    {
      "id": "32c4f470-e53f-4108-852c-68106d1ca24e",
      "key": "base_url",
      "value": "http://localhost:8080",
      "type": "string"
    }
  ]
}
